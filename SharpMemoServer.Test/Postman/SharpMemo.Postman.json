{
	"info": {
		"_postman_id": "b4901120-d1ab-438b-a87d-88317f7c02cc",
		"name": "SharpMemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dacdf9fe-8469-4ae5-8ca7-a51bf6e9991f",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    pm.response.to.have.body(\"pong\\n\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/ping",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Tables",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3bade0c-f5f8-4ba1-9ad4-bb371d9ebdc9",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.length).to.eql(1);",
							"",
							"    pm.globals.set(\"tableId\", jsonData[0]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/tables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"tables"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Table State",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f97d1e35-9135-4fba-a21b-d2e69ced69ef",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players).to.eql([]);",
							"    pm.expect(jsonData.Memo).to.eql([]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Join Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df861f5f-2d6c-4fd2-b30c-67ea133dbc83",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t}\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/join",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"join"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Table State After Join",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f97d1e35-9135-4fba-a21b-d2e69ced69ef",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 1 (42)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fffa4dec-638f-4429-a7a1-670e72c21a5a",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 42\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 2 (42)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e93b5f5c-9028-47e8-a411-c6ca8b12f7bc",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 42\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 2 (13)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21d5107e-bef6-4455-8214-a85785b08d18",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42,13]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 13\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 3 (42)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "865420dd-ca14-4a50-b064-907571c80c9b",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42,13]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 42\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 3 (13)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7d1c6b3-cbe7-47a6-84c4-ba175981eef2",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42,13]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(2);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 13\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Guiess 3 (666)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3db9e455-eece-4d37-b002-4e45ac670694",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo).to.eql([42,13,666]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Player\" : {\n\t\t\"ScreenName\" : \"someblock\",\n\t\t\"SessionId\" : \"session-1\"\n\t},\n\t\"Guess\" : 666\n}"
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}/guess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}",
						"guess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Table State After Multiple Gesses",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f97d1e35-9135-4fba-a21b-d2e69ced69ef",
						"exec": [
							"pm.test(\"Status code is 200-Ok\", function () { pm.response.to.have.status(200); });",
							"pm.test(\"Payload as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData.TableId).to.eql(pm.globals.get(\"tableId\"));",
							"    pm.expect(jsonData.Players.length).to.eql(1);",
							"    pm.expect(jsonData.Players[0].ScreenName).to.eql(\"someblock\");",
							"    pm.expect(jsonData.Memo.length).to.eql(3);",
							"    pm.expect(jsonData.Memo).to.eql([42,13,666]);",
							"    pm.expect(jsonData.GuessPosition).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/sharp-memo/v1/table/{{tableId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sharp-memo",
						"v1",
						"table",
						"{{tableId}}"
					]
				}
			},
			"response": []
		}
	]
}